<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>部署 hexo 到 nginx</title>
    <url>/2020/04/19/hexobynginx.html</url>
    <content><![CDATA[<p>本来博客是使用 GitHub pages ，但近些日子访问贼慢，刚好手里有一台小机器，当然是要用起来（折腾就对了🐶🐶🐶）。</p>
<span id="more"></span>
<h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>已购买 vps 和域名，按需备案。</p>
<p>ssh 登录远程服务器，以 CentOS 为例：</p>
<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><ul>
<li><p>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>

<p>输出类似下面的结果则表示安装成功</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git version 1.8.3.1</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建 git 用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure>
</li>
<li><p>建立裸仓</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/git  # 进入 git 用户目录</span><br><span class="line">mkdir blog &amp;&amp; chown -R git:git $_# 创建博客文件夹，，设置权限,作为 nginx web 目录</span><br><span class="line">mkdir projects &amp;&amp; chown -R git:git $_ &amp;&amp; cd $_  # 创建项目目录，设置权限并进入</span><br><span class="line">git init --bare hexo.git &amp;&amp; chown -R git:git $_ # 创建博客裸仓，设置权限</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加 SSH Key，通过 ssh 链接仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/git  # 回到 git 用户目录</span><br><span class="line">mkdir .ssh # 存放 ssh key</span><br></pre></td></tr></table></figure>

<p>在本地机器（写博客的电脑）上创建的 ssh 公钥（已有请忽略）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -o -t rsa -b 4096 -C &quot;email@example.com&quot; # 替换邮箱</span><br></pre></td></tr></table></figure>

<p>复制公钥</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pbcopy &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>在远程服务器，使用 vim 编辑文件，vim 用法请参考：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /home/git/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>

<p>按 <code>i</code> 进入编辑模式，粘贴公钥，按 <code>esc</code>，输入 <code>:wq</code> 保存并退出。</p>
</li>
</ul>
<h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><ul>
<li><p>配置发布选项</p>
<p>修改 _config.yml （本级 hexo 配置文件）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@ip:/home/git/projects/hexo.git # ip 为服务器ip</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
</li>
<li><p>自动部署（服务器）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home/git/projects/hexo.git/hooks # 进入 hook 目录</span><br><span class="line">mv post-update.sample post-update # 重命名 post-update</span><br><span class="line">vi post-update # vim 进行编辑</span><br></pre></td></tr></table></figure>

<p>按 <code>i</code> 进入编辑模式，在最后一行上面粘贴下面文字，按 <code>esc</code>，输入 <code>:wq</code> 保存并退出。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git --work-tree=/home/git/blog --git-dir=/home/git/projects/hexo.git checkout -f</span><br></pre></td></tr></table></figure>
</li>
<li><p>在本地 hexo 目录执行发布命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看服务器 blog 目录中是否有文件，如果没有请检查步骤是否错误。</p>
</li>
<li><p>源代码存放</p>
<p>在我们服务器上存放的是变异后的文件，源文件我建议存放在 github 私有仓库。</p>
</li>
</ul>
<h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><p>以 centos 为例：</p>
<ul>
<li><p>安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service nginx start</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://127.0.0.1</span><br></pre></td></tr></table></figure>

<p>可以正常下载 index.html 文件则说明启动成功。</p>
</li>
<li><p>配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>

<p>把 <code>user nginx;</code> 修改为<code>user root;</code></p>
<p>server 按照修改两处配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root /home/git/blog;</span><br><span class="line">location / &#123;</span><br><span class="line">   index index.html;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>重启 nginx</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure>

<p>在浏览器键入你的服务器 ip 地址或域名，即可正常访问。</p>
</li>
</ul>
<h2 id="https"><a href="#https" class="headerlink" title="https"></a>https</h2><p>使用 certbot 自动获取证书，参考 <a href="https://certbot.eff.org/">https://certbot.eff.org/</a></p>
<ul>
<li><p>安装 Certbot</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo yum install certbot python2-certbot-nginx</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取证书并自动配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo certbot --nginx</span><br></pre></td></tr></table></figure>

<p>按照提示输入即可</p>
</li>
<li><p>自动续签</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;0 0,12 * * * root python -c &#x27;import random; import time; time.sleep(random.random() * 3600)&#x27; &amp;&amp; certbot renew -q&quot; | sudo tee -a /etc/crontab &gt; /dev/null</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>至此，配置结束，开始写你的博客吧～</p>
]]></content>
  </entry>
  <entry>
    <title>【LeetCode】01 两数之和</title>
    <url>/2019/04/14/lettcode-xi-lie-yi.html</url>
    <content><![CDATA[<h2 id="题"><a href="#题" class="headerlink" title="题"></a>题</h2><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>给定 nums &#x3D; [2, 7, 11, 15], target &#x3D; 9<br>因为 nums[0] + nums[1] &#x3D; 2 + 7 &#x3D; 9<br>所以返回 [0, 1]</p>
<span id="more"></span>
<h2 id="答"><a href="#答" class="headerlink" title="答"></a>答</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">target</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> twoSum = <span class="keyword">function</span>(<span class="params">nums, target</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> map = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; nums.<span class="property">length</span>; index++) &#123;</span><br><span class="line">        <span class="keyword">let</span> element = nums[index]</span><br><span class="line">        <span class="keyword">let</span> num = target - element</span><br><span class="line">        <span class="keyword">if</span> (map[num] !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [map[num], index]</span><br><span class="line">        &#125;</span><br><span class="line">        map[element] = index</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> []</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>此题难度：Easy。</p>
<p>最简单的方法是通过两次 for 循环暴力求解，复杂度 O(N^2)。<br>第一次循环取出一个值，第二次从当前值的后面开始循环，依次取出与第一次的值相加，若和等于 target，则直接返回。</p>
<p>另一种方法是通过新建 map 以空间换时间，一次循环即可求出答案，复杂度 O(N)。<br>在遍历数组时，将已经出现过的数字存放在 map 中，以数值为 key，索引为 value。每次循环查看余值是否在 map 中，如果存在，则返回当前的索引和 map 中的值。当然，如果循环结束，仍未查找到，返回空数组。</p>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>两数之和</tag>
      </tags>
  </entry>
  <entry>
    <title>【LeetCode】07 整数反转</title>
    <url>/2023/12/19/leetcode-07-zheng-shu-fan-zhuan.html</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。</p>
<span id="more"></span>
<p><strong>示例 1:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: 123</span><br><span class="line">输出: 321</span><br></pre></td></tr></table></figure>
<p><strong>示例 2:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: -123</span><br><span class="line">输出: -321</span><br></pre></td></tr></table></figure>
<p><strong>示例 3:</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入: 120</span><br><span class="line">输出: 21</span><br></pre></td></tr></table></figure>
<p><strong>注意:</strong></p>
<p>假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>此题难度：Easy。</p>
<p>翻转前的整数位 x，反转后的整数为 reverseX，那么 x 的最后一位一定是 reverseX 的第一位，通过循环取余，得到 x 的末位数字。假设 x 有 n 位，则循环n次，每次循环都使 x 左移一位，最后刚好 x 的末位变为 reverseX 的首位。依次类推，即可得到反转后的整数 reverseX。注意处理反转后整数溢出的情况。</p>
<h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; <span class="variable">x</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> reverse = <span class="keyword">function</span> (<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> reverseX = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        reverseX = reverseX * <span class="number">10</span> + x % <span class="number">10</span></span><br><span class="line">        x = <span class="built_in">parseInt</span>(x / <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> ((reverseX &gt; <span class="number">2147483647</span>) || reverseX &lt; -<span class="number">2147483648</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> reverseX</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="我的提交执行用时"><a href="#我的提交执行用时" class="headerlink" title="我的提交执行用时"></a>我的提交执行用时</h2><p>执行用时：124 ms<br>内存消耗：36 MB	<br>已经战胜 87.76 % 的 javascript 提交记录</p>
]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
      <tags>
        <tag>整数反转</tag>
      </tags>
  </entry>
</search>
